// <auto-generated />
using BlazorEcommerce.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorEcommerce.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230803070028_ProductSeeding")]
    partial class ProductSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlazorEcommerce.Shared.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "This is the description for product 1. Make the description interesting with at least 1000 characters. and make sure that the description is long enough to wrap to the next line.",
                            ImageUrl = "https://via.placeholder.com/250",
                            Price = 9.99m,
                            Title = "Product 1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "This is the description for product 2. Make the description interesting with at least 1000 characters. and make sure that the description is long enough to wrap to the next line.",
                            ImageUrl = "https://via.placeholder.com/250",
                            Price = 19.99m,
                            Title = "Product 2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "This is the description for product 3. Make the description interesting with at least 1000 characters. and make sure that the description is long enough to wrap to the next line.",
                            ImageUrl = "https://via.placeholder.com/250",
                            Price = 29.99m,
                            Title = "Product 3"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
